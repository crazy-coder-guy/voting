-----------------------------------------------------------------------------------------------
// DDL Commands

CREATE TABLE STUDENT (STUD_NAME VARCHAR2(10),REG_NO NUMBER(5),MARK1 NUMBER(3),MARK_2 NUMBER(3));

//ALTER

ALTER TABLE STUDENT ADD REMARKS VARCHAR2(30);

ALTER TABLE STUDENT MODIFY REMARKS VARCHAR2(40);

ALTER TABLE STUDENT DROP COLUMN REMARKS;

DROP TABLE STUDENT;
-----------------------------------------------------------------------------------------------

//DML COMMANDS

CREATE TABLE STUDENT_1 (STUD_NAME VARCHAR2(10),REG_NO NUMBER(5),MARK1 NUMBER(3),MARK_2 NUMBER(3));

INSERT INTO STUDENT VALUES('RAGUL',162,98,96);
INSERT INTO STUDENT VALUES('RAVI',163,92,26);
INSERT INTO STUDENT VALUES('RAJESH',164,58,46);
INSERT INTO STUDENT VALUES('REVI',165,68,66);
INSERT INTO STUDENT VALUES('ROCKY',166,28,46);


INSERT INTO STUDENT VALUES ('&STUD_NAME',&REG_NO,&MARK1,&MARK2,'&REMARKS');


UPDATE STUDENT SET REMARKS='GOOD';

DELETE FROM STUDENT WHERE REMARKS='GOOD';

-----------------------------------------------------------------------------------------------

//BUILT IN FUNCTIONS

NUMERIC FUNCTIONS

SELECT ABS(1) FROM DUAL;
SELECT ABS(-1) FROM DUAL;
SELECT CEIL(2.89) FROM DUAL;
SELECT DEIL(2.15) FROM DUAL;
SELECT FLOOR(2.89) FROM DUAL;
SELECT FLOOR(2.15) FROM DUAL;
SELECT ROUND(2.15) FROM DUAL;
SELECT ROUND(2.89) FROM DUAL;
SELECT TRUNC(2.17895,1) FROM DUAL;

CHARACTER FUNCTIONS

SELECT UPPER ('ksr arts and science')FROM DUAL;
SELECT LOWER ('KSR ARTS ABD SCIENCE')FROM DUAL;
SELECT INITCAP('ksr arts') FROM DUAL;
SELECT LENGTH('KSR ARTS AND SCIENCE')FROM DUAL;

-----------------------------------------------------------------------------------------------

CREATE TABLE STUDENT_2(REGNO NUMBER(5),LANG1 NUMBER(3),LANG2 NUMBER(3),CORE1 NUMBER(3),CORE2 NUMBER(3),ELECTIVE NUMBER(3),TOTAL NUMBER(5),PERCENTAGE NUMBER(3));
INSERT INTO STUDENT_2 VALUES(&REGNO,&LANG1,&LANG2,&CORE1,&CORE2,&ELECTIVE,&TOTAL,&PERCENTAGE); 
SET SERVEROUTPUT ON
DECLARE
REG STUDENT_2.REGNO%TYPE;
LAN1 STUDENT_2.LANG1%TYPE;
LAN2 STUDENT_2.LANG2%TYPE;
CR1 STUDENT_2.CORE1%TYPE;
CR2 STUDENT_2.CORE2%TYPE;
ELEC STUDENT_2.ELECTIVE%TYPE;
TOT STUDENT_2.TOTAL%TYPE;
PER STUDENT_2.PERCENTAGE%TYPE;
CURSOR STD IS SELECT REGNO,LANG1,LANG2,CORE1,CORE2,ELECTIVE FROM STUDENT_2;
BEGIN
OPEN STD;
LOOP
FETCH STD INTO REG,LAN1,LAN2,CR1,CR2,ELEC;
EXIT WHEN STD%NOTFOUND;
TOT:=LAN1+LAN2+CR1+CR2+ELEC;
PER:=TOT/5;
UPDATE STUDENT_2 SET TOTAL=TOT,PERCENTAGE=PER WHERE REGNO=REG;
END LOOP;
CLOSE STD;
END;

-----------------------------------------------------------------------------------------------
DECLARE
A NUMBER;
B NUMBER;
C NUMBER;
MAXX NUMBER; 
BEGIN
A:=&A;
B:=&B;
C:=&C;
IF(A>B AND A>C)
THEN 
 MAXX:=A;
ELSIF(B>A AND B>C)
THEN 
MAXX:=B;
ELSE
MAXX:=C;
END IF;
DBMS_OUTPUT.PUT_LINE('MAXIMUM VALUE IS :'|| MAXX);
END;
-----------------------------------------------------------------------------------------------

DECLARE 
EVEN NUMBER:=0;
ODD NUMBER:=0;
I NUMBER;
BEGIN
FOR I IN 1..100
LOOP
IF(I MOD 2 = 0)
THEN
EVEN:=EVEN+I;
ELSE
ODD :=ODD+I;
END IF ;
END LOOP;
DBMS_OUTPUT.PUT_LINE('THE SUM OF 1 TO 100 EVEN NUMBER IS :'||EVEN);
DBMS_OUTPUT.PUT_LINE('THE SUM OF 1 TO 100 ODD NUMBER IS :' ||ODD);
END;

-----------------------------------------------------------------------------------------------

CREATE TABLE STUD (REGNO NUMBER(2),M1 NUMBER(3),M2 NUMBER(3),TOT NUMBER(3),GRAGE VARCHAR(10));
INSERT INTO STUD VALUES(&REGNO,&M1,&M2,&TOT,'&GRAGE');



DECLARE
NO STUD.REGNO%TYPE;
S1 STUD.M1%TYPE;
S2 STUD.M2%TYPE;
T STUD.TOT%TYPE;
GR STUD.GRAGE%TYPE;
P NUMBER(10,2);

CURSOR CLASS IS SELECT REGNO,M1,M2 FROM STUD;
BEGIN
OPEN CLASS;
LOOP
FETCH CLASS INTO NO,S1,S2;
EXIT WHEN CLASS%NOTFOUND;
T:=S1+S2;
P:=T/2;
GR:=GIVEGRADE(P);
UPDATE STUD SET TOT=T,GRAGE=GR WHERE REGNO=NO;
END LOOP;
CLOSE CLASS;
END;



